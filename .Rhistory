plot.subtitle = element_text(face="italic"),
plot.caption = element_text(hjust=0),
axis.ticks = element_blank(),
panel.background = element_blank(),
panel.grid.major = element_line("grey80", size = 0.1),
panel.grid.minor = element_blank(),
panel.border = element_blank(),
strip.background = element_rect(fill = "grey80", color = "white"),
strip.text = element_text(size=12),
axis.title = element_text(size=12),
axis.text = element_text(size=10),
plot.background = element_blank(),
legend.background = element_blank(),
legend.title = element_text(colour = "black", face = "italic"),
legend.text = element_text(colour = "black", face = "italic"),
strip.text.x = element_text(size = 14)
)
}
ggplot(study.panel.plot)+
geom_col(aes(dotw, n/4), fill = "#cfe2f3ff", size = 1.25)+
labs(title="Average Parking Sessions by Day of Week,\nSan Francisco, July 4 - August 1, 2017",
x="Day of Week",
y="Number of Sessions")+
plotTheme()
View(cor.demographic)
View(cor.nn)
View(cor.transport)
ggplot()+
geom_sf(data = dat_census %>%
st_transform(crs="+proj=longlat +crs = 'EPSG:6339'"), color = "grey", aes(fill = Percent_White))+
geom_point(data = dat_all,
aes(x=LONGITUDE, y = LATITUDE, color = pk_Count/28),
size = 0.2)+
scale_colour_gradient2(low = "#184e77",
high = "#168aad",
na.value = "transparent") +
mapTheme()
ggplot()+
geom_sf(data = dat_census %>%
st_transform(crs="+proj=longlat +crs = 'EPSG:6339'"), color = "grey", aes(fill = Percent_White))
View(SFCensus)
View(SFTracts)
ggplot()+
geom_sf(data = SFTracts %>%
st_transform(crs="+proj=longlat +crs = 'EPSG:6339'"), color = "grey", aes(fill = Percent_White))+
geom_point(data = dat_all,
aes(x=LONGITUDE, y = LATITUDE, color = pk_Count/28),
size = 0.2)+
scale_colour_gradient2(low = "#184e77",
high = "#168aad",
na.value = "transparent") +
mapTheme()
ggplot()+
geom_sf(data = SFTracts %>%
st_transform(crs="+proj=longlat +crs = 'EPSG:6339'"), color = "grey", aes(fill = Percent_White))+
scale_fill_gradient(low = "gray40",
high = "gray5") +
geom_point(data = dat_all,
aes(x=LONGITUDE, y = LATITUDE, color = pk_Count/28),
size = 0.2)+
scale_colour_gradient2(low = "#437d95",
high = "#b75564",
na.value = "transparent") +
mapTheme()
summary(dat_all$pk_Count)
ggplot()+
geom_sf(data = SFTracts %>%
st_transform(crs="+proj=longlat +crs = 'EPSG:6339'"), color = "grey", aes(fill = Percent_White))+
scale_fill_gradient(low = "gray40",
high = "gray5") +
geom_point(data = dat_all,
aes(x=LONGITUDE, y = LATITUDE, color = pk_Count/28),
size = 0.2)+
scale_colour_gradient2(low = "#437d95",
high = "#b75564",
midpoint = 1.25,
na.value = "transparent") +
mapTheme()
1.250/28
ggplot()+
geom_sf(data = SFTracts %>%
st_transform(crs="+proj=longlat +crs = 'EPSG:6339'"), color = "grey", aes(fill = Percent_White))+
scale_fill_gradient(low = "gray40",
high = "gray5") +
geom_point(data = dat_all,
aes(x=LONGITUDE, y = LATITUDE, color = pk_Count/28),
size = 0.2)+
scale_colour_gradient2(low = "#437d95",
high = "#b75564",
midpoint = 0.0446,
na.value = "transparent") +
mapTheme()
1.511/28
2/28
ggplot()+
geom_sf(data = SFTracts %>%
st_transform(crs="+proj=longlat +crs = 'EPSG:6339'"), color = "grey", aes(fill = Percent_White))+
scale_fill_gradient(low = "gray5",
high = "gray40") +
geom_point(data = dat_all,
aes(x=LONGITUDE, y = LATITUDE, color = pk_Count),
size = 0.2)+
scale_colour_gradient2(low = "#437d95",
high = "#b75564",
midpoint = 1.511,
na.value = "transparent") +
mapTheme()
ggplot()+
geom_sf(data = SFTracts %>%
st_transform(crs="+proj=longlat +crs = 'EPSG:6339'"), color = "grey", aes(fill = Percent_White))+
scale_fill_gradient(low = "gray5",
high = "gray40") +
geom_point(data = dat_all,
aes(x=LONGITUDE, y = LATITUDE, color = pk_Count),
size = 0.2)+
scale_colour_gradient2(low = "#437d95",
high = "#b75564",
mid = "#ffe5d9"
midpoint = 1.511,
ggplot()+
geom_sf(data = SFTracts %>%
st_transform(crs="+proj=longlat +crs = 'EPSG:6339'"), color = "grey", aes(fill = Percent_White))+
scale_fill_gradient(low = "gray5",
high = "gray40") +
geom_point(data = dat_all,
aes(x=LONGITUDE, y = LATITUDE, color = pk_Count),
size = 0.2)+
scale_colour_gradient2(low = "#437d95",
high = "#b75564",
mid = "#ffe5d9",
midpoint = 1.511,
na.value = "transparent") +
mapTheme()
ggplot()+
geom_sf(data = SFTracts %>%
st_transform(crs="+proj=longlat +crs = 'EPSG:6339'"), color = "grey", aes(fill = Percent_White))+
scale_fill_gradient(low = "gray5",
high = "gray40") +
geom_point(data = dat_all,
aes(x=LONGITUDE, y = LATITUDE, color = pk_Count),
size = 0.2)+
scale_colour_gradient2(low = "#437d95",
high = "#b75564",
mid = "#f8edeb",
midpoint = 1.511,
na.value = "transparent") +
mapTheme()
summary(dat_all$spc_event.nn)
ggplot()+
geom_sf(data = SFTracts %>%
st_transform(crs="+proj=longlat +crs = 'EPSG:6339'"), colour = '#efefef')+
geom_sf(data = spc_event %>%
st_transform(crs="+proj=longlat +crs = 'EPSG:6339'"), fill = '#d8e2dc')+
geom_point(data = dat_all,
aes(x=LONGITUDE, y = LATITUDE, color = spc_event.nn),
size = 0.2)+
scale_colour_gradient2(low = "#437d95",
high = "#b75564",
mid = "#f8edeb",
midpoint = 0.3244,
na.value = "transparent") +
mapTheme()
ggplot()+
geom_sf(data = SFTracts %>%
st_transform(crs="+proj=longlat +crs = 'EPSG:6339'"), colour = '#efefef')+
geom_sf(data = spc_event %>%
st_transform(crs="+proj=longlat +crs = 'EPSG:6339'"), fill = '#d8e2dc')+
geom_point(data = dat_all,
aes(x=LONGITUDE, y = LATITUDE, color = spc_event.nn),
size = 0.2)+
scale_colour_gradient2(low = "#0077b6",
high = "#caf0f8",
mid = "#48cae4",
midpoint = 0.3244,
na.value = "transparent") +
mapTheme()
ggplot()+
geom_sf(data = SFTracts %>%
st_transform(crs="+proj=longlat +crs = 'EPSG:6339'"), colour = '#efefef')+
geom_sf(data = spc_event %>%
st_transform(crs="+proj=longlat +crs = 'EPSG:6339'"), fill = '#d8e2dc')+
geom_point(data = dat_all,
aes(x=LONGITUDE, y = LATITUDE, color = spc_event.nn),
size = 0.2)+
scale_colour_gradient2(low = "#0077b6",
high = "#caf0f8",
mid = "#48cae4",
midpoint = 0.03244,
na.value = "transparent") +
mapTheme()
ggplot(numericVars, aes(value, fill=as.factor(key)))+
geom_bar(stat = "bin")+
facet_wrap(~key, scales="free", ncol=5)+
scale_fill_manual(values=c("#fed0bb", "#5ca4a9"),
labels = c("Not Urbanized","Urbanized"),
name="")+
labs(x="Land Use Change",y="Count",
title = "Distribution across variables",
caption = "Figure A3. Histogram of explanatory variables")+
theme(legend.position="bottom")
ggplot(numericVars, aes(value, fill="red"))+
geom_bar(stat = "bin")+
facet_wrap(~key, scales="free", ncol=5)+
scale_fill_manual(values=c("#fed0bb", "#5ca4a9"),
labels = c("Not Urbanized","Urbanized"),
name="")+
labs(x="Land Use Change",y="Count",
title = "Distribution across variables",
caption = "Figure A3. Histogram of explanatory variables")+
theme(legend.position="bottom")
View(numericVars)
ggplot(park_exp.demographic, aes(value, fill="red"))+
geom_bar(stat = "bin")+
facet_wrap(~key, scales="free", ncol=5)+
scale_fill_manual(values=c("#fed0bb", "#5ca4a9"),
labels = c("Not Urbanized","Urbanized"),
name="")+
labs(x="Land Use Change",y="Count",
title = "Distribution across variables",
caption = "Figure A3. Histogram of explanatory variables")+
theme(legend.position="bottom")
ggplot(park_exp.demographic, aes(value, fill="#cfe2f3ff"))+
ggplot(park_exp.demographic, aes(value, fill="#cfe2f3ff"))+
geom_bar(stat = "bin")+
facet_wrap(~key, scales="free", ncol=3)+
labs(x="Land Use Change",y="Count",
title = "Distribution across variables")+
theme(legend.position="bottom")
ggplot(park_exp.transport, aes(value, fill="#cfe2f3ff"))+
geom_bar(stat = "bin")+
facet_wrap(~key, scales="free", ncol=3)+
labs(x="Variable value",y="Count",
title = "Distribution across variables")+
theme(legend.position="bottom")
ggplot(park_exp.demographic, aes(value), fill="#cfe2f3ff")+
geom_bar(stat = "bin")+
facet_wrap(~key, scales="free", ncol=3)+
labs(x="Variable value",y="Count",
title = "Distribution across variables")+
theme(legend.position="bottom")
ggplot(park_exp.demographic, aes(value, fill="#cfe2f3ff"))+
geom_bar(stat = "bin")+
facet_wrap(~key, scales="free", ncol=3)+
labs(x="Variable value",y="Count",
title = "Distribution across variables")+
theme(legend.position="bottom")
ggplot(park_exp.demographic, aes(value, fill="#cfe2f3ff"))+
geom_bar(stat = "bin")+
facet_wrap(~key, scales="free", ncol=3)+
labs(x="Variable value",y="Count",
title = "Distribution across variables",
name="")+
theme(legend.position="bottom")
ggplot(park_exp.demographic, aes(value))+
geom_bar(stat = "bin", fill="#cfe2f3ff")+
facet_wrap(~key, scales="free", ncol=3)+
labs(x="Variable value",y="Count",
title = "Distribution across variables",
name="")+
theme(legend.position="bottom")
ggplot(park_exp.transport, aes(value))+
geom_bar(stat = "bin", fill="#cfe2f3ff")+
facet_wrap(~key, scales="free", ncol=3)+
labs(x="Variable value",y="Count",
title = "Distribution across variables")+
theme(legend.position="bottom")
ggplot(park_exp.nn, aes(value))+
geom_bar(stat = "bin", fill="#cfe2f3ff")+
facet_wrap(~key, scales="free", ncol=3)+
labs(x="Variable value",y="Count",
title = "Distribution across variables")+
theme(legend.position="bottom")
final_var <- dat_all %>%
select(pk_Count,
# continuous
Total_Pop, Med_Inc, White_Pop, Med_Age, Percent_White, Total_Public_Trans, Mean_Commute_Time, Percent_Taking_Public_Trans, spc_event.nn, reg_business.nn, lights.nn, enforcement.nn, school.nn, college.nn, transitstop.nn, historic_resources.nn, reg_historical.nn,
# categorical
ON_OFFSTREET_TYPE, Neighborhoods, Means_of_Transport, pdr, retail, cultural, medical, management, visitor,
)
View(final_var)
olsModel <- lm ( pk_Count ~ ., data = final_var)
summary(olsModel)
final_var <- dat_all %>%
select(pk_Count,
# continuous
Total_Pop, Med_Inc, White_Pop, Med_Age, Percent_White, Total_Public_Trans, Mean_Commute_Time, Percent_Taking_Public_Trans, spc_event.nn, reg_business.nn, lights.nn, enforcement.nn, school.nn, college.nn, transitstop.nn, historic_resources.nn, reg_historical.nn,
# categorical
ON_OFFSTREET_TYPE, Neighborhoods, Means_of_Transport, pdr, retail, cultural, medical, management, visitor, dotw
)
olsModel <- lm ( pk_Count ~ ., data = final_var)
summary(olsModel)
summary(dat_all$pk_Count)
mean(dat_all$pk_Count)
binomial_vars <- final_var %>%
mutate(highDemand = ifelse(pk_Count > mean(dat_all$pk_Count), 1, 0))
View(binomial_vars)
binomialModel <- glm(as.factor(binomial_vars) ~.,family = "binomial"(link="logit"),
data= binomial_vars)
binomial_vars <- final_var %>%
mutate(highDemand = ifelse(pk_Count > mean(dat_all$pk_Count), 1, 0)) %>%
select(-pk_Count)
binomialModel <- glm(as.factor(highDemand) ~.,family = "binomial"(link="logit"),
data= binomial_vars)
summary(binomialModel)
ggplot()+
geom_sf(data = SFTracts %>%
st_transform(crs="+proj=longlat +crs = 'EPSG:6339'"), color = "grey", aes(fill = Total_Pop))+
scale_fill_gradient(low = "gray5",
high = "gray40") +
geom_point(data = dat_all,
aes(x=LONGITUDE, y = LATITUDE, color = pk_Count),
size = 0.2)+
scale_colour_gradient2(low = "#437d95",
high = "#b75564",
mid = "#f8edeb",
midpoint = 1.511,
na.value = "transparent") +
mapTheme()
park_exp.cat <-
dat_all %>%
dplyr::select(pk_Count,
ON_OFFSTREET_TYPE, Neighborhoods, Means_of_Transport, pdr, retail, cultural, medical, management, visitor,
-LONGITUDE, -LATITUDE, -geometry, -geometry.x, -geometry.y) %>%
gather(key,value, -pk_Count)
ggplot(park_exp.cat, aes(y=pk_Count, x=as.factor(value), fill=key))+
geom_bar(position = "dodge", stat = "summary", fun.y = "mean")+
scale_fill_viridis(name = "Variables", discrete = T)+
facet_wrap(~key, scales="free", ncol=3)+
labs(x="category",y="mean value")+
theme(legend.position="right")
final_var <- dat_all %>%
select(pk_Count,
# continuous
Total_Pop, Med_Inc, # White_Pop, due to high cor with total pop
Med_Age, Percent_White, Total_Public_Trans, Mean_Commute_Time, Percent_Taking_Public_Trans, spc_event.nn, # reg_business.nn, exactly the same as spe_event.nn
lights.nn, enforcement.nn, school.nn, college.nn, transitstop.nn, historic_resources.nn, reg_historical.nn,
# categorical
ON_OFFSTREET_TYPE, Neighborhoods, Means_of_Transport, pdr, # retail, visitor, due to only one value
cultural, medical, management, dotw
)
rcorr(as.matrix(final_var[]), type = c("pearson"))
library(rcorr)
library(Hmisc)
rcorr(as.matrix(final_var[]), type = c("pearson"))
final_var <- dat_all %>%
select(pk_Count,
# continuous
Total_Pop, Med_Inc, # White_Pop, due to high cor with total pop
Med_Age, Percent_White, Total_Public_Trans, Mean_Commute_Time, Percent_Taking_Public_Trans, spc_event.nn, # reg_business.nn, exactly the same as spe_event.nn
lights.nn, enforcement.nn, school.nn, college.nn, transitstop.nn, historic_resources.nn, reg_historical.nn,
# categorical
ON_OFFSTREET_TYPE, Neighborhoods, Means_of_Transport, pdr, # retail, visitor, due to only one value
cultural, medical, management, dotw
)
rcorr(as.matrix(final_var[]), type = c("pearson"))
View(final_var)
final_var <- dat_all %>%
select(pk_Count,
# continuous
Total_Pop, Med_Inc, # White_Pop, due to high cor with total pop
Med_Age, Percent_White, Total_Public_Trans, Mean_Commute_Time, Percent_Taking_Public_Trans, spc_event.nn, # reg_business.nn, exactly the same as spe_event.nn
lights.nn, enforcement.nn, school.nn, college.nn, transitstop.nn, historic_resources.nn, reg_historical.nn,
# categorical
ON_OFFSTREET_TYPE, Neighborhoods, pdr, # retail, visitor, due to only one value
#Means_of_Transport, due to too many categories
cultural, medical, management, dotw
)
rcorr(as.matrix(final_var[]), type = c("pearson"))
View(final_var)
final_var <- dat_all %>%
select(pk_Count,
# continuous
Total_Pop, Med_Inc, # White_Pop, due to high cor with total pop
Med_Age, Percent_White, Total_Public_Trans, Mean_Commute_Time, Percent_Taking_Public_Trans, spc_event.nn, # reg_business.nn, exactly the same as spe_event.nn
lights.nn, enforcement.nn, school.nn, college.nn, transitstop.nn, historic_resources.nn, reg_historical.nn,
# categorical
ON_OFFSTREET_TYPE, Neighborhoods, pdr, # retail, visitor, due to only one value
#Means_of_Transport, due to too many categories
cultural, medical, management, dotw
) %>%
na.omit()
rcorr(as.matrix(final_var[]), type = c("pearson"))
rcorr(as.matrix(final_var), type = c("pearson"))
final_numeric_var <- dat_all %>%
select(pk_Count,
# continuous
Total_Pop, Med_Inc, # White_Pop, due to high cor with total pop
Med_Age, Percent_White, Total_Public_Trans, Mean_Commute_Time, Percent_Taking_Public_Trans, spc_event.nn, # reg_business.nn, exactly the same as spe_event.nn
lights.nn, enforcement.nn, school.nn, college.nn, transitstop.nn, historic_resources.nn, reg_historical.nn,
)
rcorr(as.matrix(final_numeric_var[]), type = c("pearson"))
all_cor_lookup <- rcorr(as.matrix(final_numeric_var[]), type = c("pearson"))
write.csv(all_cor_lookup)
all_cor_lookup <- rcorr(as.matrix(final_numeric_var[]), type = c("pearson"))
rcorr(as.matrix(final_numeric_var[]), type = c("pearson"))
final_var <- dat_all %>%
select(pk_Count,
# continuous
# Med_Inc, due to high cor with total pop
# White_Pop, due to high cor with total pop
# Total_Public_Trans, due to high cor with total pop
# Mean_Commute_Time, due to high cor with % public transit
# college.nn, due to high cor with spc_event
# reg_business.nn, exactly the same as spe_event.nn
Total_Pop,
Med_Age, Percent_White, Percent_Taking_Public_Trans, spc_event.nn,
lights.nn, enforcement.nn, school.nn, transitstop.nn, historic_resources.nn, reg_historical.nn,
# categorical
# retail, visitor, due to only one value
# Means_of_Transport, due to too many categories
ON_OFFSTREET_TYPE, Neighborhoods, pdr,
cultural, medical, management, dotw
)
final_numeric_var <- dat_all %>%
select(pk_Count,
# continuous
Total_Pop,
Med_Age, Percent_White, Percent_Taking_Public_Trans, spc_event.nn,
lights.nn, enforcement.nn, school.nn, transitstop.nn, historic_resources.nn, reg_historical.nn,
)
rcorr(as.matrix(final_numeric_var[]), type = c("pearson"))
final_var <- dat_all %>%
select(pk_Count,
# continuous
# Med_Inc, due to high cor with total pop
# White_Pop, due to high cor with total pop
# Total_Public_Trans, due to high cor with total pop
# Mean_Commute_Time, due to high cor with % public transit
# college.nn, due to high cor with spc_event
# reg_business.nn, exactly the same as spe_event.nn
# reg_historical.nn, high cor with lights.nn & spc_event.nn
# school.nn, high cor with hist recours.nn
Total_Pop,
Med_Age, Percent_White, Percent_Taking_Public_Trans, spc_event.nn,
lights.nn, enforcement.nn, transitstop.nn, historic_resources.nn,
# categorical
# retail, visitor, due to only one value
# Means_of_Transport, due to too many categories
ON_OFFSTREET_TYPE, Neighborhoods, pdr,
cultural, medical, management, dotw
)
final_numeric_var <- dat_all %>%
select(pk_Count,
# continuous
Total_Pop,
Med_Age, Percent_White, Percent_Taking_Public_Trans, spc_event.nn,
lights.nn, enforcement.nn, transitstop.nn, historic_resources.nn,
)
rcorr(as.matrix(final_numeric_var[]), type = c("pearson"))
ggcorrplot(outline.col = "white", type = "lower",
round(cor(final_numeric_vars), 1),
p.mat = cor_pmat(numericVars),
colors = c("#f28482", "white", "#0096c7"),
insig = "blank") +
labs(title = "Correlation across numeric variables")
final_vars <- dat_all %>%
select(pk_Count,
# continuous
# Med_Inc, due to high cor with total pop
# White_Pop, due to high cor with total pop
# Total_Public_Trans, due to high cor with total pop
# Mean_Commute_Time, due to high cor with % public transit
# college.nn, due to high cor with spc_event
# reg_business.nn, exactly the same as spe_event.nn
# reg_historical.nn, high cor with lights.nn & spc_event.nn
# school.nn, high cor with hist recours.nn
Total_Pop,
Med_Age, Percent_White, Percent_Taking_Public_Trans, spc_event.nn,
lights.nn, enforcement.nn, transitstop.nn, historic_resources.nn,
# categorical
# retail, visitor, due to only one value
# Means_of_Transport, due to too many categories
ON_OFFSTREET_TYPE, Neighborhoods, pdr,
cultural, medical, management, dotw
)
final_numeric_vars <- dat_all %>%
select(pk_Count,
# continuous
Total_Pop,
Med_Age, Percent_White, Percent_Taking_Public_Trans, spc_event.nn,
lights.nn, enforcement.nn, transitstop.nn, historic_resources.nn,
)
ggcorrplot(outline.col = "white", type = "lower",
round(cor(final_numeric_vars), 1),
p.mat = cor_pmat(numericVars),
colors = c("#f28482", "white", "#0096c7"),
insig = "blank") +
labs(title = "Correlation across numeric variables")
ggcorrplot(outline.col = "white", type = "lower",
round(cor(final_numeric_vars), 1),
p.mat = cor_pmat(final_numeric_vars),
colors = c("#f28482", "white", "#0096c7"),
insig = "blank") +
labs(title = "Correlation across numeric variables")
write.csv(dat_all)
write.csv(dat_all, dat_all.csv)
write.csv(dat_all, "dat_all.csv")
study.panel.loc <- #by meter
parkingsample %>%
mutate(pk_Counter = 1) %>%
group_by(POST_ID) %>%
summarize(pk_Count = sum(pk_Counter, na.rm=T))
study.panel.loc <- #by meter
parkingsample %>%
mutate(pk_Counter = 1) %>%
group_by(POST_ID) %>%
summarize(pk_Count = sum(pk_Counter, na.rm=T))
study.panel.loc <- #by meter
parkingsample %>%
mutate(pk_Counter = 1) %>%
group_by(POST_ID) %>%
dplyr::summarize(pk_Count = sum(pk_Counter, na.rm=T))
